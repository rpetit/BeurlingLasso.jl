var documenterSearchIndex = {"docs":
[{"location":"examples/#Examples-1","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#Polynomial-moments-1","page":"Examples","title":"Polynomial moments","text":"","category":"section"},{"location":"examples/#","page":"Examples","title":"Examples","text":"Here Phimu=leftint_mathcalXvarphi_alphadmuright_alphaleq d with varphi_alpha(x)=x_1^alpha_1x_n^alpha_n.","category":"page"},{"location":"examples/#Fourier-measurements-1","page":"Examples","title":"Fourier measurements","text":"","category":"section"},{"location":"examples/#","page":"Examples","title":"Examples","text":"Here Phimu=leftint_mathcalXvarphi_omegadmuright_omegainOmega with varphi_omega(x)=e^iomega x.","category":"page"},{"location":"#Introduction-1","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"#","page":"Introduction","title":"Introduction","text":"BeurlingLasso.jl is a Julia package for solving the following optimization problem over measures, which is known as the Beurling LASSO:","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"beginequation*\n  underset muinmathcalM(mathcalX)textinf \n  frac12Phimu-y_mathcalH^2 + lambda mu(mathcalX)\n  labeleqnnoisy_blasso\nendequation*","category":"page"},{"location":"#","page":"Introduction","title":"Introduction","text":"Two solvers are available: one relies on semi-definite relaxations (Lasserre hierarchies), while the other implements the sliding Frank-Wolfe algorithm.","category":"page"}]
}
